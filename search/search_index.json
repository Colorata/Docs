{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"All Colorata Docs now there! In this website you have access to all libraries made by Colorata . Your browser does not support the video tag. AnimateAsLifestyle This library is creating most animations for You!","title":"Home"},{"location":"#all-colorata-docs-now-there","text":"In this website you have access to all libraries made by Colorata . Your browser does not support the video tag.","title":"All Colorata Docs now there!"},{"location":"#animateaslifestyle","text":"This library is creating most animations for You!","title":"AnimateAsLifestyle"},{"location":"animateAsLifestyle/animate_rounded_corner_shape/","text":"AnimateRoundedCornerShape AnimateRoundedCornerShape is set of functions that will animate RoundedCornerShape for you. Functions Modifier with percent Function with percent Modifier with size Function with size fun Modifier . animateRoundedCornerShape ( percent : Int , animationSpec : AnimationSpec < Int > = spring () ) Parameter Description Type Default value Allowed values percent Rounded corner in percent Int Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Int> spring() - @Composable fun animateRoundedCornerShape ( percent : Int , animationSpec : AnimationSpec < Int > = spring () ): RoundedCornerShape Parameter Description Type Default value Allowed values percent Rounded corner in percent Int Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Int> spring() - fun Modifier . animateRoundedCornerShape ( size : Dp , animationSpec : AnimationSpec < Dp > = spring () ) Parameter Description Type Default value Allowed values size Rounded corner in percent Dp Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Dp> spring() - @Composable fun animateRoundedCornerShape ( size : Dp , animationSpec : AnimationSpec < Dp > = spring () ): RoundedCornerShape Parameter Description Type Default value Allowed values size Rounded corner in percent Dp Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Dp> spring() - Samples With Function Button ( onClick = { }, shape = animateRoundedCornerShape ( percent = if ( isCompositionLaunched ()) 50 else 10 ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag. With Modifier Box ( modifier = Modifier . animateRoundedCornerShape ( percent = if ( isCompositionLaunched ()) 50 else 10 ) . size ( 48. dp ) . background ( MaterialTheme . colorScheme . primary ) ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"AnimateShape"},{"location":"animateAsLifestyle/animate_rounded_corner_shape/#animateroundedcornershape","text":"AnimateRoundedCornerShape is set of functions that will animate RoundedCornerShape for you.","title":"AnimateRoundedCornerShape"},{"location":"animateAsLifestyle/animate_rounded_corner_shape/#functions","text":"Modifier with percent Function with percent Modifier with size Function with size fun Modifier . animateRoundedCornerShape ( percent : Int , animationSpec : AnimationSpec < Int > = spring () ) Parameter Description Type Default value Allowed values percent Rounded corner in percent Int Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Int> spring() - @Composable fun animateRoundedCornerShape ( percent : Int , animationSpec : AnimationSpec < Int > = spring () ): RoundedCornerShape Parameter Description Type Default value Allowed values percent Rounded corner in percent Int Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Int> spring() - fun Modifier . animateRoundedCornerShape ( size : Dp , animationSpec : AnimationSpec < Dp > = spring () ) Parameter Description Type Default value Allowed values size Rounded corner in percent Dp Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Dp> spring() - @Composable fun animateRoundedCornerShape ( size : Dp , animationSpec : AnimationSpec < Dp > = spring () ): RoundedCornerShape Parameter Description Type Default value Allowed values size Rounded corner in percent Dp Not provided (\u221e; \u221e) animationSpec Spec of animation. AnimationSpec<Dp> spring() -","title":"Functions"},{"location":"animateAsLifestyle/animate_rounded_corner_shape/#samples","text":"","title":"Samples"},{"location":"animateAsLifestyle/animate_rounded_corner_shape/#with-function","text":"Button ( onClick = { }, shape = animateRoundedCornerShape ( percent = if ( isCompositionLaunched ()) 50 else 10 ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"With Function"},{"location":"animateAsLifestyle/animate_rounded_corner_shape/#with-modifier","text":"Box ( modifier = Modifier . animateRoundedCornerShape ( percent = if ( isCompositionLaunched ()) 50 else 10 ) . size ( 48. dp ) . background ( MaterialTheme . colorScheme . primary ) ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"With Modifier"},{"location":"animateAsLifestyle/animate_visibility/","text":"AnimateVisibility AnimateVisibility is an extension of Modifier interface that will let you animate Composition . fun Modifier . animateVisibility ( visible : Boolean , animationType : AnimationType = AnimationType . FadeOnly () ) Specs Parameter Description Type Default value Allowed values visible Is Composition visible Boolean Not provided true, false animationType Type of animation AnimationType FadeOnly() - Samples Button ( onClick = { }, modifier = Modifier . animateVisibility ( isCompositionLaunched (), animationType = AnimationType . FadeAndSlide () ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"AnimateVisibility"},{"location":"animateAsLifestyle/animate_visibility/#animatevisibility","text":"AnimateVisibility is an extension of Modifier interface that will let you animate Composition . fun Modifier . animateVisibility ( visible : Boolean , animationType : AnimationType = AnimationType . FadeOnly () )","title":"AnimateVisibility"},{"location":"animateAsLifestyle/animate_visibility/#specs","text":"Parameter Description Type Default value Allowed values visible Is Composition visible Boolean Not provided true, false animationType Type of animation AnimationType FadeOnly() -","title":"Specs"},{"location":"animateAsLifestyle/animate_visibility/#samples","text":"Button ( onClick = { }, modifier = Modifier . animateVisibility ( isCompositionLaunched (), animationType = AnimationType . FadeAndSlide () ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"Samples"},{"location":"animateAsLifestyle/animation_type/","text":"AnimationType This is general class for defining animation types. FadeOnly AnimationType . FadeOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. ScaleOnly AnimationType . ScaleOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. FadeAndScale AnimationType . FadeAndScale ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromScale : Float = 0f , toScale : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. FadeAndSlide AnimationType . FadeAndSlide ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromOffset : Float = 100f , toOffset : Float = 0f , animationSpec : AnimationSpec < Float > = spring (), slideDirection : SlideDirection = SlideDirection . Vertical ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"General"},{"location":"animateAsLifestyle/animation_type/#animationtype","text":"This is general class for defining animation types.","title":"AnimationType"},{"location":"animateAsLifestyle/animation_type/#fadeonly","text":"AnimationType . FadeOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeOnly"},{"location":"animateAsLifestyle/animation_type/#scaleonly","text":"AnimationType . ScaleOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"ScaleOnly"},{"location":"animateAsLifestyle/animation_type/#fadeandscale","text":"AnimationType . FadeAndScale ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromScale : Float = 0f , toScale : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeAndScale"},{"location":"animateAsLifestyle/animation_type/#fadeandslide","text":"AnimationType . FadeAndSlide ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromOffset : Float = 100f , toOffset : Float = 0f , animationSpec : AnimationSpec < Float > = spring (), slideDirection : SlideDirection = SlideDirection . Vertical ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeAndSlide"},{"location":"animateAsLifestyle/getting_started/","text":"Getting started What AnimateAsLifestyle actually is? Is a library that creates most animations on your app in more easy way. Installing Import library to your project(build.gradle app): Groovy Kotlin dependencies { implementation 'com.colorata:animateAsLifestyle:1.0.0' } dependencies { implementation ( \"com.colorata:animateAsLifestyle:1.0.0\" ) } Explore AnimationType Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"Getting started"},{"location":"animateAsLifestyle/getting_started/#getting-started","text":"What AnimateAsLifestyle actually is? Is a library that creates most animations on your app in more easy way.","title":"Getting started"},{"location":"animateAsLifestyle/getting_started/#installing","text":"Import library to your project(build.gradle app): Groovy Kotlin dependencies { implementation 'com.colorata:animateAsLifestyle:1.0.0' } dependencies { implementation ( \"com.colorata:animateAsLifestyle:1.0.0\" ) }","title":"Installing"},{"location":"animateAsLifestyle/getting_started/#explore","text":"","title":"Explore"},{"location":"animateAsLifestyle/getting_started/#animationtype","text":"Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"AnimationType"},{"location":"animateAsLifestyle/animation_type/fade_only/","text":"FadeOnly FadeOnly AnimationType: AnimationType . FadeOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Specs Parameter Description Type Default value Allowed values from Alpha when element is not visible Float 0f [0f; 1f] to Alpha when element is visible Float 1f [0f; 1f] animationSpec General animationSpec for animation AnimationSpec<Float> spring() - Samples With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . FadeOnly ( /* from = 0f, to = 1f, animationSpec = spring() */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Custom from and to Light from = 0.3f Dark from = 0.3f Light to = 0.7f Dark to = 0.7f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Custom animationSpec Light tween(1000) Dark tween(1000) Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeOnly"},{"location":"animateAsLifestyle/animation_type/fade_only/#fadeonly","text":"FadeOnly AnimationType: AnimationType . FadeOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeOnly"},{"location":"animateAsLifestyle/animation_type/fade_only/#specs","text":"Parameter Description Type Default value Allowed values from Alpha when element is not visible Float 0f [0f; 1f] to Alpha when element is visible Float 1f [0f; 1f] animationSpec General animationSpec for animation AnimationSpec<Float> spring() -","title":"Specs"},{"location":"animateAsLifestyle/animation_type/fade_only/#samples","text":"With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . FadeOnly ( /* from = 0f, to = 1f, animationSpec = spring() */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"Samples"},{"location":"animateAsLifestyle/animation_type/fade_only/#custom-from-and-to","text":"Light from = 0.3f Dark from = 0.3f Light to = 0.7f Dark to = 0.7f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom from and to"},{"location":"animateAsLifestyle/animation_type/fade_only/#custom-animationspec","text":"Light tween(1000) Dark tween(1000) Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom animationSpec"},{"location":"animateAsLifestyle/animation_type/fade_scale/","text":"FadeAndScale FadeAndScale AnimationType: AnimationType . FadeAndScale ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromScale : Float = 0f , toScale : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Specs Parameter Description Type Default value Allowed values fromAlpha Alpha when element is not visible Float 0f [0f; 1f] toAlpha Alpha when element is visible Float 1f [0f; 1f] fromScale Scale when element is not visible Float 0f [0f; \u221e) toScale Scale when element is visible Float 1f [0f; \u221e) animationSpec General animationSpec for animation AnimationSpec<Float> spring() - Samples With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . FadeAndScale ( /* fromAlpha = 0f, toAlpha = 1f, fromScale = 0f, toScale = 1f, animationSpec = spring() */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Custom alpha and scale Light fromAlpha = 0.3f, fromScale = 0.3f Dark fromAlpha = 0.3f, fromScale = 0.3f Light toAlpha = 0.5f, toScale = 0.5f Dark toAlpha = 0.5f, toScale = 0.5f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Custom animationSpec Light spring(0.2f) Dark spring(0.2f) Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeAndScale"},{"location":"animateAsLifestyle/animation_type/fade_scale/#fadeandscale","text":"FadeAndScale AnimationType: AnimationType . FadeAndScale ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromScale : Float = 0f , toScale : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeAndScale"},{"location":"animateAsLifestyle/animation_type/fade_scale/#specs","text":"Parameter Description Type Default value Allowed values fromAlpha Alpha when element is not visible Float 0f [0f; 1f] toAlpha Alpha when element is visible Float 1f [0f; 1f] fromScale Scale when element is not visible Float 0f [0f; \u221e) toScale Scale when element is visible Float 1f [0f; \u221e) animationSpec General animationSpec for animation AnimationSpec<Float> spring() -","title":"Specs"},{"location":"animateAsLifestyle/animation_type/fade_scale/#samples","text":"With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . FadeAndScale ( /* fromAlpha = 0f, toAlpha = 1f, fromScale = 0f, toScale = 1f, animationSpec = spring() */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"Samples"},{"location":"animateAsLifestyle/animation_type/fade_scale/#custom-alpha-and-scale","text":"Light fromAlpha = 0.3f, fromScale = 0.3f Dark fromAlpha = 0.3f, fromScale = 0.3f Light toAlpha = 0.5f, toScale = 0.5f Dark toAlpha = 0.5f, toScale = 0.5f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom alpha and scale"},{"location":"animateAsLifestyle/animation_type/fade_scale/#custom-animationspec","text":"Light spring(0.2f) Dark spring(0.2f) Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom animationSpec"},{"location":"animateAsLifestyle/animation_type/fade_slide/","text":"FadeAndSlide FadeAndSlide AnimationType: AnimationType . FadeAndSlide ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromOffset : Float = 100f , toOffset : Float = 0f , animationSpec : AnimationSpec < Float > = spring (), slideDirection : SlideDirection = SlideDirection . Vertical ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Specs Parameter Description Type Default value Allowed values fromAlpha Alpha when element is not visible Float 0f [0f; 1f] toAlpha Alpha when element is visible Float 1f [0f; 1f] fromOffset Offset when element is not visible Float 0f (\u221e; \u221e) toOffset Offset when element is visible Float 1f (\u221e; \u221e) animationSpec General animationSpec for animation AnimationSpec<Float> spring() - slideDirection Direction of animation SlideDirection Vertical Vertical, Horizontal Samples With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . FadeAndSlide ( /* fromAlpha = 0f, toAlpha = 1f, fromOffset = 100f, toOffset = 0f, animationSpec = spring(), slideDirection = SlideDirection.Vertical */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Custom fromOffset and slideDirection Light 300f vertical Dark 300f vertical Light -300f vertical Dark -300f vertical Light 300f horizontal Dark 300f horizontal Light -300f horizontal Dark -300f horizontal Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Custom toAlpha and fromAlpha Light to = 0.7f Dark to = 0.7f Light from = 0.3f Dark from = 0.3f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Custom animationSpec Light tween(1000, easing = LinearEasing) Dark tween(1000, easing = LinearEasing) Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeAndSlide"},{"location":"animateAsLifestyle/animation_type/fade_slide/#fadeandslide","text":"FadeAndSlide AnimationType: AnimationType . FadeAndSlide ( fromAlpha : Float = 0f , toAlpha : Float = 1f , fromOffset : Float = 100f , toOffset : Float = 0f , animationSpec : AnimationSpec < Float > = spring (), slideDirection : SlideDirection = SlideDirection . Vertical ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"FadeAndSlide"},{"location":"animateAsLifestyle/animation_type/fade_slide/#specs","text":"Parameter Description Type Default value Allowed values fromAlpha Alpha when element is not visible Float 0f [0f; 1f] toAlpha Alpha when element is visible Float 1f [0f; 1f] fromOffset Offset when element is not visible Float 0f (\u221e; \u221e) toOffset Offset when element is visible Float 1f (\u221e; \u221e) animationSpec General animationSpec for animation AnimationSpec<Float> spring() - slideDirection Direction of animation SlideDirection Vertical Vertical, Horizontal","title":"Specs"},{"location":"animateAsLifestyle/animation_type/fade_slide/#samples","text":"With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . FadeAndSlide ( /* fromAlpha = 0f, toAlpha = 1f, fromOffset = 100f, toOffset = 0f, animationSpec = spring(), slideDirection = SlideDirection.Vertical */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"Samples"},{"location":"animateAsLifestyle/animation_type/fade_slide/#custom-fromoffset-and-slidedirection","text":"Light 300f vertical Dark 300f vertical Light -300f vertical Dark -300f vertical Light 300f horizontal Dark 300f horizontal Light -300f horizontal Dark -300f horizontal Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom fromOffset and slideDirection"},{"location":"animateAsLifestyle/animation_type/fade_slide/#custom-toalpha-and-fromalpha","text":"Light to = 0.7f Dark to = 0.7f Light from = 0.3f Dark from = 0.3f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom toAlpha and fromAlpha"},{"location":"animateAsLifestyle/animation_type/fade_slide/#custom-animationspec","text":"Light tween(1000, easing = LinearEasing) Dark tween(1000, easing = LinearEasing) Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom animationSpec"},{"location":"animateAsLifestyle/animation_type/scale_only/","text":"ScaleOnly ScaleOnly AnimationType: AnimationType . ScaleOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Specs Parameter Description Type Default value Allowed values from Scale when element is not visible Float 0f [0f; \u221e) to Scale when element is visible Float 1f [0f; \u221e) animationSpec General animationSpec for animation AnimationSpec<Float> spring() - Samples With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . ScaleOnly ( /* from = 0f, to = 1f, animationSpec = spring() */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag. Custom from and to Light from = 0.3f Dark from = 0.3f Light to = 0.5f Dark to = 0.5f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Custom animationSpec Light spring(0.2f) Dark spring(0.2f) Your browser does not support the video tag. Your browser does not support the video tag.","title":"ScaleOnly"},{"location":"animateAsLifestyle/animation_type/scale_only/#scaleonly","text":"ScaleOnly AnimationType: AnimationType . ScaleOnly ( from : Float = 0f , to : Float = 1f , animationSpec : AnimationSpec < Float > = spring () ) Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"ScaleOnly"},{"location":"animateAsLifestyle/animation_type/scale_only/#specs","text":"Parameter Description Type Default value Allowed values from Scale when element is not visible Float 0f [0f; \u221e) to Scale when element is visible Float 1f [0f; \u221e) animationSpec General animationSpec for animation AnimationSpec<Float> spring() -","title":"Specs"},{"location":"animateAsLifestyle/animation_type/scale_only/#samples","text":"With AnimateVisibility : var visible by remember { mutableStateOf ( false ) } LaunchedEffect ( Unit ) { visible = true delay ( 2000 ) visible = false } Button ( onClick = { }, modifier = Modifier . animateVisibility ( visible , animationType = AnimationType . ScaleOnly ( /* from = 0f, to = 1f, animationSpec = spring() */ ) ) ) { Text ( text = \"Send\" ) } Light Dark Your browser does not support the video tag. Your browser does not support the video tag.","title":"Samples"},{"location":"animateAsLifestyle/animation_type/scale_only/#custom-from-and-to","text":"Light from = 0.3f Dark from = 0.3f Light to = 0.5f Dark to = 0.5f Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom from and to"},{"location":"animateAsLifestyle/animation_type/scale_only/#custom-animationspec","text":"Light spring(0.2f) Dark spring(0.2f) Your browser does not support the video tag. Your browser does not support the video tag.","title":"Custom animationSpec"},{"location":"animateAsLifestyle/animation_type/weights/","text":"Weights How much processing time I need to proceed this animation? If you answer this question you will get the weight for specific animation. Animation weights There is 3 different basic animation types which requires different processing time: Type Weight fade 1 scale 2 slide 3 Calculating weights for specific animation AnimationType Calculation process Final weight FadeOnly fade 1 ScaleOnly scale 2 FadeAndScale fade + scale 3 FadeAndSlide fade + slide 5 As you see, FadeAndSlide animation is the most expensive one. Performance types Performance type Max allowed weight Description Full \u221e All animations are allowed. Most recommended for flagships, mid-range devices Simplified 3 Fade and scale allowed. Recommended for low-budgets SuperSimplified 1 Fade only. Recommended for super low-budgets Simplifying animations If specific animation doesn't meet performance requirements, it will be simplified to the closest animation(by weight). For example: FadeAndSlide -> FadeAndScale Implementing in project At top of your project you can provide specific AnimationsPerformance like this: // YourActivity -> OnCreate -> setContent ProvideAnimationsPerformance ( /*Your animations performance, AnimationsPerformance.Full by default*/ ) { // ... } To customize and create your own functions, you can access current animations performance like this: when ( LocalAnimationsPerformance . current ) { AnimationsPerformance . Full -> // ... AnimationsPerformance . Simplified -> // ... AnimationsPerformance . SuperSimplified -> // ... } when ( LocalAnimationsPerformance . current . maxWeight ) { Int . MAX_VALUE -> // ... 3 -> // ... 1 -> // ... } Also, there is function used to optimize animations: fun Modifier . myCustomAnimation ( animationType : AnimationType ) = composed { val optimizedAnimation = rememberOptimizedAnimationsFor ( animationType ) // ... }","title":"Weights"},{"location":"animateAsLifestyle/animation_type/weights/#weights","text":"How much processing time I need to proceed this animation? If you answer this question you will get the weight for specific animation.","title":"Weights"},{"location":"animateAsLifestyle/animation_type/weights/#animation-weights","text":"There is 3 different basic animation types which requires different processing time: Type Weight fade 1 scale 2 slide 3","title":"Animation weights"},{"location":"animateAsLifestyle/animation_type/weights/#calculating-weights-for-specific-animation","text":"AnimationType Calculation process Final weight FadeOnly fade 1 ScaleOnly scale 2 FadeAndScale fade + scale 3 FadeAndSlide fade + slide 5 As you see, FadeAndSlide animation is the most expensive one.","title":"Calculating weights for specific animation"},{"location":"animateAsLifestyle/animation_type/weights/#performance-types","text":"Performance type Max allowed weight Description Full \u221e All animations are allowed. Most recommended for flagships, mid-range devices Simplified 3 Fade and scale allowed. Recommended for low-budgets SuperSimplified 1 Fade only. Recommended for super low-budgets","title":"Performance types"},{"location":"animateAsLifestyle/animation_type/weights/#simplifying-animations","text":"If specific animation doesn't meet performance requirements, it will be simplified to the closest animation(by weight). For example: FadeAndSlide -> FadeAndScale","title":"Simplifying animations"},{"location":"animateAsLifestyle/animation_type/weights/#implementing-in-project","text":"At top of your project you can provide specific AnimationsPerformance like this: // YourActivity -> OnCreate -> setContent ProvideAnimationsPerformance ( /*Your animations performance, AnimationsPerformance.Full by default*/ ) { // ... } To customize and create your own functions, you can access current animations performance like this: when ( LocalAnimationsPerformance . current ) { AnimationsPerformance . Full -> // ... AnimationsPerformance . Simplified -> // ... AnimationsPerformance . SuperSimplified -> // ... } when ( LocalAnimationsPerformance . current . maxWeight ) { Int . MAX_VALUE -> // ... 3 -> // ... 1 -> // ... } Also, there is function used to optimize animations: fun Modifier . myCustomAnimation ( animationType : AnimationType ) = composed { val optimizedAnimation = rememberOptimizedAnimationsFor ( animationType ) // ... }","title":"Implementing in project"}]}